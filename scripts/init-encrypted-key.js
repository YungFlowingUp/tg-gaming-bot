const crypto = require('crypto');

function generateEncryptionKey() {
    try {
        const key = crypto.randomBytes(32).toString('hex');
        
        console.log('üîê –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π –∫–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è:');
        console.log('='.repeat(50));
        console.log(key);
        console.log('='.repeat(50));
        console.log('\nüìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç –∫–ª—é—á –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ –≤–∞—à .env —Ñ–∞–π–ª:');
        console.log('ENCRYPTION_KEY=' + key);
        console.log('\n‚ö†Ô∏è  –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–ª—é—á –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ!');
        console.log('‚ùå –ï—Å–ª–∏ –≤—ã –ø–æ—Ç–µ—Ä—è–µ—Ç–µ –∫–ª—é—á, –≤—Å–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã!');
    } catch(error) {
        console.error("–ö–ª—é—á –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å: ", error);
    }
    
}

generateEncryptionKey()